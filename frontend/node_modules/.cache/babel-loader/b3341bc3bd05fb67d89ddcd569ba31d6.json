{"ast":null,"code":"var _jsxFileName = \"/Users/jokizi/Documents/GitHub/BrunettiJoris_7_27052021/frontend/src/container/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport Input from \"../../components/Input/Input\";\nimport Button from \"../../components/Button/Button\";\nimport api from \"../../Config/Api\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { toastTrigger } from \"../../helper/toast\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  setIsLoggedin,\n  setMyUserId\n  /*setAdmin*/\n\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const onChangeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const onLogin = async () => {\n    let token;\n\n    try {\n      const response = await api.post(\"/users/login/\", {\n        email,\n        password\n      });\n      token = response.data.token;\n      sessionStorage.setItem(\"groupomania-token\", response.data.token);\n      setIsLoggedin(true);\n      setMyUserId(response.data.userId);\n      toastTrigger(\"success\", `Bonjour ${response.data.username} ✌🏼`);\n      history.push({\n        pathname: \"/accueil\"\n      });\n    } catch (error) {\n      toastTrigger(\"error\", \"Une erreur est survenue ⛔️\");\n      setErrorMessage(error.response.data.error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-title\",\n      children: \"Connectez-vous avec vos collaborateurs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-input-email\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        onChange: onChangeEmail,\n        label: \"e-mail\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-input-password\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        onChange: onChangePassword,\n        label: \"mot de passe\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-button\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onLogin,\n        title: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"LFDlPCqQ8CZA9QdS6OsH4zsK1T0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jokizi/Documents/GitHub/BrunettiJoris_7_27052021/frontend/src/container/Login/Login.js"],"names":["Input","Button","api","useState","useHistory","toastTrigger","ErrorMessage","Login","setIsLoggedin","setMyUserId","history","email","setEmail","password","setPassword","errorMessage","setErrorMessage","onChangeEmail","e","target","value","onChangePassword","onLogin","token","response","post","data","sessionStorage","setItem","userId","username","push","pathname","error"],"mappings":"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","sourcesContent":["import Input from \"../../components/Input/Input\";\nimport Button from \"../../components/Button/Button\";\nimport api from \"../../Config/Api\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { toastTrigger } from \"../../helper/toast\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport \"./login.css\";\n\nconst Login = ({ setIsLoggedin, setMyUserId /*setAdmin*/ }) => {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onLogin = async () => {\n    let token;\n    try {\n      const response = await api.post(\"/users/login/\", {\n        email,\n        password,\n      });\n      token = response.data.token;\n      sessionStorage.setItem(\"groupomania-token\", response.data.token);\n      setIsLoggedin(true);\n      setMyUserId(response.data.userId);\n      toastTrigger(\"success\", `Bonjour ${response.data.username} ✌🏼`);\n      history.push({ pathname: \"/accueil\" });\n    } catch (error) {\n      toastTrigger(\"error\", \"Une erreur est survenue ⛔️\");\n      setErrorMessage(error.response.data.error);\n    }\n  };\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-title\">Connectez-vous avec vos collaborateurs</div>\n      <div className=\"login-input-email\">\n        <Input onChange={onChangeEmail} label=\"e-mail\" type=\"email\" />\n      </div>\n      <div className=\"login-input-password\">\n        <Input onChange={onChangePassword} label=\"mot de passe\" type=\"password\" />\n      </div>\n      <div className=\"login-button\">\n        <Button onClick={onLogin} title=\"Connexion\" />\n      </div>\n      {errorMessage && <ErrorMessage message={errorMessage} />}\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}