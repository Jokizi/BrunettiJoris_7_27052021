{"ast":null,"code":"var _jsxFileName = \"/Users/jokizi/Documents/GitHub/BrunettiJoris_7_27052021/frontend/src/container/UserProfil/UserProfil.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport api from \"../../Config/Api\";\nimport ProfilDetails from \"../../components/ProfilDetails/ProfilDetails\";\nimport PostMessage from \"../../components/PostMessage/PostMessage\";\nimport LikeDislikeMessage from \"../../components/LikeMessage/LikeMessage\";\nimport CommentMessage from \"../../components/CommentMessage/CommentMessage\";\nimport DeleteMessage from \"../../components/DeleteMessage/DeleteMessage\";\nimport ModifyMessage from \"../../components/ModifyMessage/ModifyMessage\";\nimport \"./user-profil.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserProfil = ({\n  myUserId,\n  admin,\n  setIsLoggedin,\n  setCheckLogin\n}) => {\n  _s();\n\n  const [allMessages, setAllMessages] = useState([]);\n  const history = useHistory();\n  const groupomaniaUser = JSON.parse(sessionStorage.getItem(\"groupomania-user\"));\n  useEffect(() => {\n    if (sessionStorage.getItem(\"groupomania-token\")) {\n      const getMessages = async () => {\n        const token = JSON.parse(JSON.stringify(sessionStorage.getItem(\"groupomania-token\")));\n\n        try {\n          const response = await api({\n            url: \"/user/messages\",\n            method: \"get\",\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setAllMessages(response.data);\n        } catch (error) {}\n      };\n\n      getMessages();\n    } else {\n      history.push(\"/\");\n    }\n  }, [history]);\n\n  const viewMessagesPost = newMessagesUser => {\n    console.log(\"========messagesuser============================\");\n    console.log(newMessagesUser);\n    console.log(\"====================================\");\n    setAllMessages(newMessagesUser);\n  }; // rendre dynamique l'affichage des likes message\n\n\n  const changeLike = ({\n    messageId,\n    like,\n    dislike\n  }) => {\n    const displayLike = allMessages.filter(element => {\n      if (element.id === messageId) {\n        element.likes = like;\n        element.dislikes = dislike;\n      }\n\n      return element;\n    });\n    setAllMessages(displayLike);\n  }; // rendre dynamique l'affichage des commentaires\n\n\n  const changeComment = ({\n    messageId,\n    comments\n  }) => {\n    const displayComment = allMessages.filter(element => {\n      if (element.id === messageId) {\n        element.comments = comments;\n      }\n\n      return element;\n    });\n    setAllMessages(displayComment);\n  }; // rendre dynamique la suppression de message\n\n\n  const changeDeleteMessage = messageId => {\n    const idToDelete = messageId;\n    const displayMessages = allMessages.filter(element => element.id !== idToDelete);\n    setAllMessages(displayMessages);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profil-details-container\",\n      children: /*#__PURE__*/_jsxDEV(ProfilDetails, {\n        admin: admin,\n        myUserId: myUserId,\n        setIsLoggedin: setIsLoggedin,\n        setCheckLogin: setCheckLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-message-container\",\n      children: /*#__PURE__*/_jsxDEV(PostMessage, {\n        viewMessagesPost: viewMessagesPost,\n        isProfil: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-user-card-container\",\n      children: allMessages.map(element => {\n        var _element$Likes;\n\n        const messageLikeByCurrentUser = element === null || element === void 0 ? void 0 : (_element$Likes = element.Likes) === null || _element$Likes === void 0 ? void 0 : _element$Likes.filter(elt => groupomaniaUser.id === elt.userId);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-user-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-picture\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                width: \"100%\",\n                height: \"100%\",\n                style: {\n                  borderRadius: \"50%\"\n                },\n                src: element.User.avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: element.User.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-date\",\n            children: element.createdAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-title\",\n              children: element.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), element.attachment && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"picture-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: element.attachment,\n                alt: \"img\",\n                width: \"100%\",\n                height: \"100%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: element.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LikeDislikeMessage, {\n            changeLike: changeLike,\n            like: element.likes,\n            dislike: element.dislikes,\n            messageId: element.id,\n            messageLikeByCurrentUser: messageLikeByCurrentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CommentMessage, {\n            admin: admin,\n            setAllMessages: setAllMessages,\n            changeComment: changeComment,\n            comments: element.comments,\n            messageId: element.id,\n            myUserId: myUserId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ModifyMessage, {\n            messageId: element.id,\n            title: element.title,\n            attachment: element.attachment,\n            oldAttachement: element.attachment,\n            content: element.content,\n            myUserId: myUserId,\n            idUserMessage: element.UserId,\n            setAllMessages: setAllMessages,\n            getMessagesURI: \"/user/messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DeleteMessage, {\n            changeDeleteMessage: changeDeleteMessage,\n            messageId: element.id,\n            myUserId: myUserId,\n            idUserMessage: element.UserId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, element.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProfil, \"nmj4Ru/OTisS+FvjsbkXqeqM/Y4=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserProfil;\nexport default UserProfil;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfil\");","map":{"version":3,"sources":["/Users/jokizi/Documents/GitHub/BrunettiJoris_7_27052021/frontend/src/container/UserProfil/UserProfil.js"],"names":["React","useState","useEffect","useHistory","api","ProfilDetails","PostMessage","LikeDislikeMessage","CommentMessage","DeleteMessage","ModifyMessage","UserProfil","myUserId","admin","setIsLoggedin","setCheckLogin","allMessages","setAllMessages","history","groupomaniaUser","JSON","parse","sessionStorage","getItem","getMessages","token","stringify","response","url","method","headers","Authorization","data","error","push","viewMessagesPost","newMessagesUser","console","log","changeLike","messageId","like","dislike","displayLike","filter","element","id","likes","dislikes","changeComment","comments","displayComment","changeDeleteMessage","idToDelete","displayMessages","map","messageLikeByCurrentUser","Likes","elt","userId","borderRadius","User","avatar","username","createdAt","title","attachment","content","UserId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport api from \"../../Config/Api\";\nimport ProfilDetails from \"../../components/ProfilDetails/ProfilDetails\";\nimport PostMessage from \"../../components/PostMessage/PostMessage\";\nimport LikeDislikeMessage from \"../../components/LikeMessage/LikeMessage\";\nimport CommentMessage from \"../../components/CommentMessage/CommentMessage\";\nimport DeleteMessage from \"../../components/DeleteMessage/DeleteMessage\";\nimport ModifyMessage from \"../../components/ModifyMessage/ModifyMessage\";\nimport \"./user-profil.css\";\n\nconst UserProfil = ({ myUserId, admin, setIsLoggedin, setCheckLogin }) => {\n  const [allMessages, setAllMessages] = useState([]);\n  const history = useHistory();\n  const groupomaniaUser = JSON.parse(sessionStorage.getItem(\"groupomania-user\"));\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"groupomania-token\")) {\n      const getMessages = async () => {\n        const token = JSON.parse(JSON.stringify(sessionStorage.getItem(\"groupomania-token\")));\n\n        try {\n          const response = await api({\n            url: \"/user/messages\",\n            method: \"get\",\n            headers: { Authorization: `Bearer ${token}` },\n          });\n          setAllMessages(response.data);\n        } catch (error) {}\n      };\n      getMessages();\n    } else {\n      history.push(\"/\");\n    }\n  }, [history]);\n  const viewMessagesPost = (newMessagesUser) => {\n    console.log(\"========messagesuser============================\");\n    console.log(newMessagesUser);\n    console.log(\"====================================\");\n    setAllMessages(newMessagesUser);\n  };\n\n  // rendre dynamique l'affichage des likes message\n  const changeLike = ({ messageId, like, dislike }) => {\n    const displayLike = allMessages.filter((element) => {\n      if (element.id === messageId) {\n        element.likes = like;\n        element.dislikes = dislike;\n      }\n      return element;\n    });\n    setAllMessages(displayLike);\n  };\n\n  // rendre dynamique l'affichage des commentaires\n  const changeComment = ({ messageId, comments }) => {\n    const displayComment = allMessages.filter((element) => {\n      if (element.id === messageId) {\n        element.comments = comments;\n      }\n      return element;\n    });\n    setAllMessages(displayComment);\n  };\n  // rendre dynamique la suppression de message\n  const changeDeleteMessage = (messageId) => {\n    const idToDelete = messageId;\n    const displayMessages = allMessages.filter((element) => element.id !== idToDelete);\n    setAllMessages(displayMessages);\n  };\n\n  return (\n    <div>\n      <div className=\"profil-details-container\">\n        <ProfilDetails admin={admin} myUserId={myUserId} setIsLoggedin={setIsLoggedin} setCheckLogin={setCheckLogin} />\n      </div>\n      <div className=\"post-message-container\">\n        <PostMessage viewMessagesPost={viewMessagesPost} isProfil={true} />\n      </div>\n      <div className=\"message-user-card-container\">\n        {allMessages.map((element) => {\n          const messageLikeByCurrentUser = element?.Likes?.filter((elt) => groupomaniaUser.id === elt.userId);\n          return (\n            <div className=\"message-user-card\" key={element.id}>\n              <div className=\"avatar-name\">\n                <div className=\"avatar-picture\">\n                  <img width=\"100%\" height=\"100%\" style={{ borderRadius: \"50%\" }} src={element.User.avatar} />\n                </div>\n                <div>{element.User.username}</div>\n              </div>\n              <div className=\"message-date\">{element.createdAt}</div>\n              <div className=\"message-container\">\n                <div className=\"message-title\">{element.title}</div>\n                {element.attachment && (\n                  <div className=\"picture-container\">\n                    <img src={element.attachment} alt=\"img\" width=\"100%\" height=\"100%\" />\n                  </div>\n                )}\n                <div className=\"message-content\">{element.content}</div>\n              </div>\n              <LikeDislikeMessage\n                changeLike={changeLike}\n                like={element.likes}\n                dislike={element.dislikes}\n                messageId={element.id}\n                messageLikeByCurrentUser={messageLikeByCurrentUser}\n              />\n              <CommentMessage\n                admin={admin}\n                setAllMessages={setAllMessages}\n                changeComment={changeComment}\n                comments={element.comments}\n                messageId={element.id}\n                myUserId={myUserId}\n              />\n              <ModifyMessage\n                messageId={element.id}\n                title={element.title}\n                attachment={element.attachment}\n                oldAttachement={element.attachment}\n                content={element.content}\n                myUserId={myUserId}\n                idUserMessage={element.UserId}\n                setAllMessages={setAllMessages}\n                getMessagesURI=\"/user/messages\"\n              />\n              <DeleteMessage\n                changeDeleteMessage={changeDeleteMessage}\n                messageId={element.id}\n                myUserId={myUserId}\n                idUserMessage={element.UserId}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\nexport default UserProfil;\n"]},"metadata":{},"sourceType":"module"}