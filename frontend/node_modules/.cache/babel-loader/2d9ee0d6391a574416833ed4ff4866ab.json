{"ast":null,"code":"var _jsxFileName = \"/Users/jokizi/Documents/GitHub/BrunettiJoris_7_27052021/frontend/src/components/Accordion/Accordion.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./Accordion.css\";\nimport api from \"../../Config/Api\";\nimport LikeDislikeComment from \"../LikeComment/LikeComment\";\nimport ModifyComment from \"../ModifyComment/ModifyComment\";\nimport DeleteComment from \"../DeleteComment/DeleteComment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Accordion = ({\n  myUserId,\n  admin,\n  title,\n  messageId,\n  allComments,\n  setAllComments,\n  setAllMessages,\n  setMessagesOtherUser,\n  locationState\n}) => {\n  _s();\n\n  const [active, setActive] = useState(false);\n  const groupomaniaUser = JSON.parse(sessionStorage.getItem(\"groupomania-user\"));\n\n  const getAllComments = async e => {\n    if (sessionStorage.getItem(\"groupomania-token\")) {\n      const token = JSON.parse(JSON.stringify(sessionStorage.getItem(\"groupomania-token\")));\n\n      try {\n        const response = await api({\n          url: \"/\" + messageId + \"/comments\",\n          method: \"get\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setAllComments(response.data);\n      } catch (error) {}\n    }\n\n    setActive(!active);\n  }; // rendre dynamique les likes Comment\n\n\n  const changeLikeComment = ({\n    commentId,\n    commentLike,\n    commentDislike\n  }) => {\n    const displayLike = allComments.filter(element => {\n      if (element.id === commentId) {\n        element.commentLikes = commentLike;\n        element.commentDislikes = commentDislike;\n      }\n\n      return element;\n    });\n    setAllComments(displayLike);\n  };\n\n  const changeDeleteComment = commentId => {\n    const idToDelete = commentId;\n    const displayComments = allComments.filter(element => element.id !== idToDelete);\n    setAllComments(displayComments);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `accordion ${active && \"active\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion__title\",\n      onClick: getAllComments,\n      children: [title, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"accordion__icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion__content\",\n      children: allComments.map(element => {\n        var _element$CommentsLike;\n\n        const messageCommentLikeByCurrentUser = element === null || element === void 0 ? void 0 : (_element$CommentsLike = element.CommentsLikes) === null || _element$CommentsLike === void 0 ? void 0 : _element$CommentsLike.filter(elt => groupomaniaUser.id === elt.userId);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-comment-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: element.createdAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-avatar-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-comment-picture\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                width: \"100%\",\n                height: \"100%\",\n                style: {\n                  borderRadius: \"50%\"\n                },\n                src: element.User.avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accordion-comment-username\",\n              children: element.User.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-comment-content\",\n            children: element.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-comment-like-modify-delete-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accordion-comment-like-dislike\",\n              children: /*#__PURE__*/_jsxDEV(LikeDislikeComment, {\n                changeLikeComment: changeLikeComment,\n                commentLike: element.commentLikes,\n                commentDislike: element.commentDislikes,\n                commentId: element.id,\n                messageCommentLikeByCurrentUser: messageCommentLikeByCurrentUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accordion-comment-modify-delete\",\n              children: [/*#__PURE__*/_jsxDEV(ModifyComment, {\n                setAllComments: setAllComments,\n                myUserId: myUserId,\n                idUserComment: element.UserId,\n                messageId: messageId,\n                commentId: element.id,\n                content: element.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(DeleteComment, {\n                admin: admin,\n                setAllMessages: setAllMessages,\n                changeDeleteComment: changeDeleteComment,\n                commentId: element.id,\n                messageId: messageId,\n                myUserId: myUserId,\n                idUserComment: element.UserId,\n                setMessagesOtherUser: setMessagesOtherUser,\n                locationState: locationState\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, element.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Accordion, \"1cfVChV6gA1Fk8+xDnwTj3gmgZo=\");\n\n_c = Accordion;\nexport default Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/Users/jokizi/Documents/GitHub/BrunettiJoris_7_27052021/frontend/src/components/Accordion/Accordion.js"],"names":["useState","api","LikeDislikeComment","ModifyComment","DeleteComment","Accordion","myUserId","admin","title","messageId","allComments","setAllComments","setAllMessages","setMessagesOtherUser","locationState","active","setActive","groupomaniaUser","JSON","parse","sessionStorage","getItem","getAllComments","e","token","stringify","response","url","method","headers","Authorization","data","error","changeLikeComment","commentId","commentLike","commentDislike","displayLike","filter","element","id","commentLikes","commentDislikes","changeDeleteComment","idToDelete","displayComments","map","messageCommentLikeByCurrentUser","CommentsLikes","elt","userId","createdAt","borderRadius","User","avatar","username","content","UserId"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport \"./Accordion.css\";\nimport api from \"../../Config/Api\";\nimport LikeDislikeComment from \"../LikeComment/LikeComment\";\nimport ModifyComment from \"../ModifyComment/ModifyComment\";\nimport DeleteComment from \"../DeleteComment/DeleteComment\";\n\nconst Accordion = ({\n  myUserId,\n  admin,\n  title,\n  messageId,\n  allComments,\n  setAllComments,\n  setAllMessages,\n  setMessagesOtherUser,\n  locationState,\n}) => {\n  const [active, setActive] = useState(false);\n  const groupomaniaUser = JSON.parse(sessionStorage.getItem(\"groupomania-user\"));\n\n  const getAllComments = async (e) => {\n    if (sessionStorage.getItem(\"groupomania-token\")) {\n      const token = JSON.parse(JSON.stringify(sessionStorage.getItem(\"groupomania-token\")));\n\n      try {\n        const response = await api({\n          url: \"/\" + messageId + \"/comments\",\n          method: \"get\",\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        setAllComments(response.data);\n      } catch (error) {}\n    }\n    setActive(!active);\n  };\n  // rendre dynamique les likes Comment\n  const changeLikeComment = ({ commentId, commentLike, commentDislike }) => {\n    const displayLike = allComments.filter((element) => {\n      if (element.id === commentId) {\n        element.commentLikes = commentLike;\n        element.commentDislikes = commentDislike;\n      }\n      return element;\n    });\n    setAllComments(displayLike);\n  };\n\n  const changeDeleteComment = (commentId) => {\n    const idToDelete = commentId;\n    const displayComments = allComments.filter((element) => element.id !== idToDelete);\n    setAllComments(displayComments);\n  };\n  return (\n    <div className={`accordion ${active && \"active\"}`}>\n      <div className=\"accordion__title\" onClick={getAllComments}>\n        {title} <span className=\"accordion__icon\"></span>\n      </div>\n      <div className=\"accordion__content\">\n        {allComments.map((element) => {\n          const messageCommentLikeByCurrentUser = element?.CommentsLikes?.filter(\n            (elt) => groupomaniaUser.id === elt.userId\n          );\n          return (\n            <div className=\"accordion-comment-card\" key={element.id}>\n              <div>{element.createdAt}</div>\n              <div className=\"accordion-avatar-name\">\n                <div className=\"avatar-comment-picture\">\n                  <img width=\"100%\" height=\"100%\" style={{ borderRadius: \"50%\" }} src={element.User.avatar} />\n                </div>\n                <div className=\"accordion-comment-username\">{element.User.username}</div>\n              </div>\n              <div className=\"accordion-comment-content\">{element.content}</div>\n              <div className=\"accordion-comment-like-modify-delete-container\">\n                <div className=\"accordion-comment-like-dislike\">\n                  <LikeDislikeComment\n                    changeLikeComment={changeLikeComment}\n                    commentLike={element.commentLikes}\n                    commentDislike={element.commentDislikes}\n                    commentId={element.id}\n                    messageCommentLikeByCurrentUser={messageCommentLikeByCurrentUser}\n                  />\n                </div>\n                <div className=\"accordion-comment-modify-delete\">\n                  <ModifyComment\n                    setAllComments={setAllComments}\n                    myUserId={myUserId}\n                    idUserComment={element.UserId}\n                    messageId={messageId}\n                    commentId={element.id}\n                    content={element.content}\n                  />\n\n                  <DeleteComment\n                    admin={admin}\n                    setAllMessages={setAllMessages}\n                    changeDeleteComment={changeDeleteComment}\n                    commentId={element.id}\n                    messageId={messageId}\n                    myUserId={myUserId}\n                    idUserComment={element.UserId}\n                    setMessagesOtherUser={setMessagesOtherUser}\n                    locationState={locationState}\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\nexport default Accordion;\n"]},"metadata":{},"sourceType":"module"}