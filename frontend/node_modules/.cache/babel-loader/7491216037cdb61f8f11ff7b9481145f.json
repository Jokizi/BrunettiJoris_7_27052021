{"ast":null,"code":"var _jsxFileName = \"/Users/jokizi/Documents/GitHub/BrunettiJoris_7_27052021/frontend/src/components/CardAllUsers/CardAllUsers.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport api from \"../../Config/Api\";\nimport Input from \"../Input/Input\";\nimport \"./card-all-users.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    backgroundColor: \"#f9f9f9\",\n    boxShadow: \"5px 5px 5px 5px #dcdcde\",\n    borderRadius: \"5px\",\n    paddingTop: \"15px\",\n    paddingBottom: \"15px\",\n    \"& > *\": {\n      margin: theme.spacing(0.5)\n    }\n  }\n}));\nexport default function OutlinedChips({\n  myUserId\n}) {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [allUsers, setAllUsers] = useState([]);\n  const [searchBarValue, setSearchBarValue] = useState(\"\");\n  useEffect(() => {\n    const token = JSON.parse(JSON.stringify(sessionStorage.getItem(\"groupomania-token\")));\n\n    const getAllUsers = async () => {\n      try {\n        const response = await api({\n          url: \"/all/users\",\n          method: \"get\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setAllUsers(response.data);\n      } catch (error) {}\n    };\n\n    getAllUsers();\n  }, []);\n\n  const handleChange = e => {\n    setSearchBarValue(e.target.value);\n  };\n\n  const handleClick = id => {\n    if (id === myUserId) {\n      history.push(\"/profil\");\n    } else {\n      history.push({\n        pathname: \"/utilisateur/profil\",\n        state: {\n          id\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-users\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Rechercher utilisateur\",\n        type: \"search\",\n        value: searchBarValue,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), allUsers.filter(element => {\n      return element.username.toLowerCase().includes(searchBarValue.toLowerCase());\n    }).map(element => {\n      return /*#__PURE__*/_jsxDEV(Chip, {\n        style: {\n          width: \"12%\",\n          height: \"45px\",\n          color: \"black\",\n          borderColor: \"#fc930c\",\n          borderRadius: \"50px\",\n          boxShadow: \"3px 3px 3px 3px #b6a9a9\",\n          displayFlex: \"flex\",\n          justifyContent: \"start\"\n        },\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            width: \"20%\",\n            height: \"35px\",\n            marginRight: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: element.avatar,\n            style: {\n              width: \"100%\",\n              height: \"52px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this),\n        label: element.username,\n        onClick: () => handleClick(element.id),\n        color: \"primary\",\n        variant: \"outlined\"\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OutlinedChips, \"6MydgqiQ2k04wPe+1/NBqtFCDlE=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = OutlinedChips;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutlinedChips\");","map":{"version":3,"sources":["/Users/jokizi/Documents/GitHub/BrunettiJoris_7_27052021/frontend/src/components/CardAllUsers/CardAllUsers.js"],"names":["React","makeStyles","Avatar","Chip","useEffect","useState","useHistory","api","Input","useStyles","theme","root","display","justifyContent","flexWrap","backgroundColor","boxShadow","borderRadius","paddingTop","paddingBottom","margin","spacing","OutlinedChips","myUserId","classes","history","allUsers","setAllUsers","searchBarValue","setSearchBarValue","token","JSON","parse","stringify","sessionStorage","getItem","getAllUsers","response","url","method","headers","Authorization","data","error","handleChange","e","target","value","handleClick","id","push","pathname","state","filter","element","username","toLowerCase","includes","map","width","height","color","borderColor","displayFlex","marginRight","avatar"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport api from \"../../Config/Api\";\nimport Input from \"../Input/Input\";\nimport \"./card-all-users.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    backgroundColor: \"#f9f9f9\",\n    boxShadow: \"5px 5px 5px 5px #dcdcde\",\n    borderRadius: \"5px\",\n    paddingTop: \"15px\",\n    paddingBottom: \"15px\",\n    \"& > *\": {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nexport default function OutlinedChips({ myUserId }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [allUsers, setAllUsers] = useState([]);\n  const [searchBarValue, setSearchBarValue] = useState(\"\");\n\n  useEffect(() => {\n    const token = JSON.parse(JSON.stringify(sessionStorage.getItem(\"groupomania-token\")));\n    const getAllUsers = async () => {\n      try {\n        const response = await api({\n          url: \"/all/users\",\n          method: \"get\",\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        setAllUsers(response.data);\n      } catch (error) {}\n    };\n    getAllUsers();\n  }, []);\n\n  const handleChange = (e) => {\n    setSearchBarValue(e.target.value);\n  };\n\n  const handleClick = (id) => {\n    if (id === myUserId) {\n      history.push(\"/profil\");\n    } else {\n      history.push({ pathname: \"/utilisateur/profil\", state: { id } });\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className=\"input-users\">\n        <Input label=\"Rechercher utilisateur\" type=\"search\" value={searchBarValue} onChange={handleChange} />\n      </div>\n      {allUsers\n        .filter((element) => {\n          return element.username.toLowerCase().includes(searchBarValue.toLowerCase());\n        })\n        .map((element) => {\n          return (\n            <Chip\n              style={{\n                width: \"12%\",\n                height: \"45px\",\n                color: \"black\",\n                borderColor: \"#fc930c\",\n                borderRadius: \"50px\",\n                boxShadow: \"3px 3px 3px 3px #b6a9a9\",\n                displayFlex: \"flex\",\n                justifyContent: \"start\",\n              }}\n              key={element.id}\n              avatar={\n                <Avatar style={{ width: \"20%\", height: \"35px\", marginRight: \"10px\" }}>\n                  {<img src={element.avatar} style={{ width: \"100%\", height: \"52px\" }} />}\n                </Avatar>\n              }\n              label={element.username}\n              onClick={() => handleClick(element.id)}\n              color=\"primary\"\n              variant=\"outlined\"\n            />\n          );\n        })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}