{"ast":null,"code":"var _jsxFileName = \"/Users/jokizi/Documents/GitHub/BrunettiJoris_7_27052021/frontend/src/components/LikeComment/LikeComment.js\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport api from \"../../Config/Api\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { toastTrigger } from \"../../helper/toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LikeDislikeComment = ({\n  commentId,\n  commentLike,\n  commentDislike,\n  changeLikeComment,\n  messageCommentLikeByCurrentUser\n}) => {\n  _s();\n\n  const [pushLike, setPushLike] = useState([\"far\", \"thumbs-up\"]);\n  const [pushDislike, setPushDislike] = useState([\"far\", \"thumbs-down\"]);\n  useEffect(() => {\n    if (messageCommentLikeByCurrentUser === null || messageCommentLikeByCurrentUser === void 0 ? void 0 : messageCommentLikeByCurrentUser.length) {\n      if (messageCommentLikeByCurrentUser[0].userLike) {\n        setPushLike([\"fas\", \"thumbs-up\"]);\n      } else if (messageCommentLikeByCurrentUser[0].userDislike) {\n        setPushDislike([\"fas\", \"thumbs-down\"]);\n      }\n    }\n  }, [messageCommentLikeByCurrentUser]);\n\n  const onLike = async () => {\n    try {\n      const token = JSON.parse(JSON.stringify(sessionStorage.getItem(\"groupomania-token\")));\n      const response = await api({\n        url: \"/\" + commentId + \"/vote/like\",\n        method: \"post\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      if (response.data === \"like ajouté\") {\n        commentLike = commentLike + 1;\n        setPushLike([\"fas\", \"thumbs-up\"]);\n        toastTrigger(\"success\", \"Like ajouté 👍🏼\");\n      } else if (response.data === \"like retiré\") {\n        commentLike = commentLike - 1;\n        setPushLike([\"far\", \"thumbs-up\"]);\n        toastTrigger(\"success\", \"Like supprimé 👍🏼\");\n      } else if (response.data === \"dislike retiré, like ajouté\") {\n        commentLike = commentLike + 1;\n        setPushLike([\"fas\", \"thumbs-up\"]);\n        toastTrigger(\"success\", \"Like ajouté 👍🏼\");\n        commentDislike = commentDislike - 1;\n        setPushDislike([\"far\", \"thumbs-down\"]);\n      }\n\n      changeLikeComment({\n        commentId,\n        commentLike,\n        commentDislike\n      });\n    } catch (error) {\n      toastTrigger(\"error\", \"Une erreur est survenue ⛔️\");\n    }\n  };\n\n  const onDislike = async () => {\n    try {\n      const token = JSON.parse(JSON.stringify(sessionStorage.getItem(\"groupomania-token\")));\n      const response = await api({\n        url: \"/\" + commentId + \"/vote/dislike\",\n        method: \"post\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      if (response.data === \"dislike ajouté\") {\n        commentDislike = commentDislike + 1;\n        setPushDislike([\"fas\", \"thumbs-down\"]);\n        toastTrigger(\"success\", \"Dislike ajouté 👎🏼\");\n      } else if (response.data === \"dislike retiré\") {\n        commentDislike = commentDislike - 1;\n        setPushDislike([\"far\", \"thumbs-down\"]);\n        toastTrigger(\"success\", \"Dislike supprimé 👎🏼\");\n      } else if (response.data === \"like retiré, dislike ajouté\") {\n        commentDislike = commentDislike + 1;\n        setPushDislike([\"fas\", \"thumbs-down\"]);\n        toastTrigger(\"success\", \"Dislike ajouté 👎🏼\");\n        commentLike = commentLike - 1;\n        setPushLike([\"far\", \"thumbs-up\"]);\n      }\n\n      changeLikeComment({\n        commentId,\n        commentLike,\n        commentDislike\n      });\n    } catch (error) {\n      toastTrigger(\"error\", \"Une erreur est survenue ⛔️\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"like-dislike-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"like-blue\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: onLike,\n        color: \"blue\",\n        icon: pushLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), commentLike]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"like-icon\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: onDislike,\n        color: \"red\",\n        icon: pushDislike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), commentDislike]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LikeDislikeComment, \"AXyTK628wWmWyvB81RGYr951T9w=\");\n\n_c = LikeDislikeComment;\nexport default LikeDislikeComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"LikeDislikeComment\");","map":{"version":3,"sources":["/Users/jokizi/Documents/GitHub/BrunettiJoris_7_27052021/frontend/src/components/LikeComment/LikeComment.js"],"names":["FontAwesomeIcon","api","useState","useEffect","toastTrigger","LikeDislikeComment","commentId","commentLike","commentDislike","changeLikeComment","messageCommentLikeByCurrentUser","pushLike","setPushLike","pushDislike","setPushDislike","length","userLike","userDislike","onLike","token","JSON","parse","stringify","sessionStorage","getItem","response","url","method","headers","Authorization","data","error","onDislike"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport api from \"../../Config/Api\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { toastTrigger } from \"../../helper/toast\";\n\nconst LikeDislikeComment = ({\n  commentId,\n  commentLike,\n  commentDislike,\n  changeLikeComment,\n  messageCommentLikeByCurrentUser,\n}) => {\n  const [pushLike, setPushLike] = useState([\"far\", \"thumbs-up\"]);\n  const [pushDislike, setPushDislike] = useState([\"far\", \"thumbs-down\"]);\n\n  useEffect(() => {\n    if (messageCommentLikeByCurrentUser?.length) {\n      if (messageCommentLikeByCurrentUser[0].userLike) {\n        setPushLike([\"fas\", \"thumbs-up\"]);\n      } else if (messageCommentLikeByCurrentUser[0].userDislike) {\n        setPushDislike([\"fas\", \"thumbs-down\"]);\n      }\n    }\n  }, [messageCommentLikeByCurrentUser]);\n\n  const onLike = async () => {\n    try {\n      const token = JSON.parse(JSON.stringify(sessionStorage.getItem(\"groupomania-token\")));\n\n      const response = await api({\n        url: \"/\" + commentId + \"/vote/like\",\n        method: \"post\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (response.data === \"like ajouté\") {\n        commentLike = commentLike + 1;\n        setPushLike([\"fas\", \"thumbs-up\"]);\n        toastTrigger(\"success\", \"Like ajouté 👍🏼\");\n      } else if (response.data === \"like retiré\") {\n        commentLike = commentLike - 1;\n        setPushLike([\"far\", \"thumbs-up\"]);\n        toastTrigger(\"success\", \"Like supprimé 👍🏼\");\n      } else if (response.data === \"dislike retiré, like ajouté\") {\n        commentLike = commentLike + 1;\n        setPushLike([\"fas\", \"thumbs-up\"]);\n        toastTrigger(\"success\", \"Like ajouté 👍🏼\");\n        commentDislike = commentDislike - 1;\n        setPushDislike([\"far\", \"thumbs-down\"]);\n      }\n      changeLikeComment({ commentId, commentLike, commentDislike });\n    } catch (error) {\n      toastTrigger(\"error\", \"Une erreur est survenue ⛔️\");\n    }\n  };\n\n  const onDislike = async () => {\n    try {\n      const token = JSON.parse(JSON.stringify(sessionStorage.getItem(\"groupomania-token\")));\n\n      const response = await api({\n        url: \"/\" + commentId + \"/vote/dislike\",\n        method: \"post\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      if (response.data === \"dislike ajouté\") {\n        commentDislike = commentDislike + 1;\n        setPushDislike([\"fas\", \"thumbs-down\"]);\n        toastTrigger(\"success\", \"Dislike ajouté 👎🏼\");\n      } else if (response.data === \"dislike retiré\") {\n        commentDislike = commentDislike - 1;\n        setPushDislike([\"far\", \"thumbs-down\"]);\n        toastTrigger(\"success\", \"Dislike supprimé 👎🏼\");\n      } else if (response.data === \"like retiré, dislike ajouté\") {\n        commentDislike = commentDislike + 1;\n        setPushDislike([\"fas\", \"thumbs-down\"]);\n        toastTrigger(\"success\", \"Dislike ajouté 👎🏼\");\n        commentLike = commentLike - 1;\n        setPushLike([\"far\", \"thumbs-up\"]);\n      }\n      changeLikeComment({ commentId, commentLike, commentDislike });\n    } catch (error) {\n      toastTrigger(\"error\", \"Une erreur est survenue ⛔️\");\n    }\n  };\n\n  return (\n    <div className=\"like-dislike-container\">\n      <div className=\"like-blue\">\n        <FontAwesomeIcon onClick={onLike} color=\"blue\" icon={pushLike} />\n        {commentLike}\n      </div>\n      <div className=\"like-icon\">\n        <FontAwesomeIcon onClick={onDislike} color=\"red\" icon={pushDislike} />\n        {commentDislike}\n      </div>\n    </div>\n  );\n};\nexport default LikeDislikeComment;\n"]},"metadata":{},"sourceType":"module"}