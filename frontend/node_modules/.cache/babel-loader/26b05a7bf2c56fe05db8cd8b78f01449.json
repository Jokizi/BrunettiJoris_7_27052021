{"ast":null,"code":"var _jsxFileName = \"/Users/jokizi/Documents/GitHub/BrunettiJoris_7_27052021/frontend/src/components/PostMessage/PostMessage.js\";\nimport React, { Component } from \"react\";\nimport Input from \"../../components/Input/Input\";\nimport InputTextArea from \"../../components/Input/InputTextARea\";\nimport Button from \"../../components/Button/Button\";\nimport ButtonFile from \"../Button/ButtonFile\";\nimport api from \"../../Config/Api\";\nimport FormData from \"form-data\";\nimport { toastTrigger } from \"../../helper/toast\";\nimport \"./PostMessage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PostMessage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onUploadFile = e => {\n      this.setState({\n        file: e.target.files[0]\n      });\n      this.setState({\n        activePicture: true\n      });\n    };\n\n    this.onChangeTitle = e => {\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.onChangeContent = e => {\n      this.setState({\n        content: e.target.value\n      });\n    };\n\n    this.onPublish = async () => {\n      const {\n        title,\n        content,\n        file\n      } = this.state;\n\n      if (!title || !content) {\n        toastTrigger(\"error\", \"Une erreur est survenue ‚õîÔ∏è\");\n        return;\n      }\n\n      const token = JSON.parse(JSON.stringify(sessionStorage.getItem(\"groupomania-token\")));\n      const obj = {\n        title,\n        content\n      };\n      const json = JSON.stringify(obj);\n      const formData = new FormData();\n      formData.append(\"image\", file);\n      formData.append(\"message\", json);\n\n      if (this.props.isProfil) {\n        try {\n          if (file) {\n            await api({\n              url: \"/messagesImages/new/\",\n              method: \"post\",\n              data: formData,\n              headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"application/json\",\n                \"Content-Type\": \"multipart/from-data\"\n              }\n            });\n            const response = await api({\n              url: \"/user/messages\",\n              method: \"get\",\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            this.props.viewMessagesPost(response.data);\n            this.setState({\n              title: \"\",\n              content: \"\",\n              file: \"\",\n              theInputKey: Math.random().toString(36)\n            });\n            toastTrigger(\"success\", \"Publication ajout√© üëåüèº\");\n          } else {\n            await api({\n              url: \"/messages/new/\",\n              method: \"post\",\n              data: obj,\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            const response = await api({\n              url: \"/user/messages\",\n              method: \"get\",\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            this.props.viewMessagesPost(response.data);\n            this.setState({\n              title: \"\",\n              content: \"\"\n            });\n            toastTrigger(\"success\", \"Publication ajout√© üëåüèº\");\n          }\n        } catch (error) {\n          toastTrigger(\"error\", \"Une erreur est survenue ‚õîÔ∏è\");\n        }\n      } else {\n        try {\n          if (file) {\n            const response = await api({\n              url: \"/messagesImages/new/\",\n              method: \"post\",\n              data: formData,\n              headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"application/json\",\n                \"Content-Type\": \"multipart/from-data\"\n              }\n            });\n            this.props.viewMessagesPost(response.data);\n            this.setState({\n              title: \"\",\n              content: \"\",\n              file: \"\",\n              theInputKey: Math.random().toString(36)\n            });\n            toastTrigger(\"success\", \"Publication ajout√© üëåüèº\");\n          } else {\n            const response = await api({\n              url: \"/messages/new/\",\n              method: \"post\",\n              data: obj,\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            this.props.viewMessagesPost(response.data);\n            this.setState({\n              title: \"\",\n              content: \"\"\n            });\n            toastTrigger(\"success\", \"Publication ajout√© üëåüèº\");\n          }\n        } catch (error) {\n          toastTrigger(\"error\", \"Une erreur est survenue ‚õîÔ∏è\");\n        }\n      }\n    };\n\n    this.state = {\n      file: \"\",\n      title: \"\",\n      content: \"\",\n      theInputKey: \"\",\n      activePicture: false\n    };\n  }\n\n  render() {\n    var _this$state$file, _this$state$file2;\n\n    const {\n      title,\n      content\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-message-title\",\n        children: \"\\xC9changer avec vos collaborateurs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-title\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: title,\n            onChange: this.onChangeTitle,\n            label: \"Titre\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-file\",\n          children: /*#__PURE__*/_jsxDEV(ButtonFile, {\n            onChange: this.onUploadFile,\n            type: \"file\",\n            theInputKey: this.state.theInputKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-content\",\n          children: /*#__PURE__*/_jsxDEV(InputTextArea, {\n            id: \"outlined-multiline-static\",\n            label: \"Publication\",\n            rows: 1,\n            variant: \"outlined\",\n            onChange: this.onChangeContent,\n            value: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), this.state.activePicture && ((_this$state$file = this.state.file) === null || _this$state$file === void 0 ? void 0 : _this$state$file.name) !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"picture-name\",\n        children: (_this$state$file2 = this.state.file) === null || _this$state$file2 === void 0 ? void 0 : _this$state$file2.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-publish\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.onPublish,\n          title: \"Publier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PostMessage;","map":{"version":3,"sources":["/Users/jokizi/Documents/GitHub/BrunettiJoris_7_27052021/frontend/src/components/PostMessage/PostMessage.js"],"names":["React","Component","Input","InputTextArea","Button","ButtonFile","api","FormData","toastTrigger","PostMessage","constructor","props","onUploadFile","e","setState","file","target","files","activePicture","onChangeTitle","title","value","onChangeContent","content","onPublish","state","token","JSON","parse","stringify","sessionStorage","getItem","obj","json","formData","append","isProfil","url","method","data","headers","Authorization","Accept","response","viewMessagesPost","theInputKey","Math","random","toString","error","render","name","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Input from \"../../components/Input/Input\";\nimport InputTextArea from \"../../components/Input/InputTextARea\";\nimport Button from \"../../components/Button/Button\";\nimport ButtonFile from \"../Button/ButtonFile\";\nimport api from \"../../Config/Api\";\nimport FormData from \"form-data\";\nimport { toastTrigger } from \"../../helper/toast\";\nimport \"./PostMessage.css\";\n\nclass PostMessage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { file: \"\", title: \"\", content: \"\", theInputKey: \"\", activePicture: false };\n  }\n\n  onUploadFile = (e) => {\n    this.setState({ file: e.target.files[0] });\n    this.setState({ activePicture: true });\n  };\n\n  onChangeTitle = (e) => {\n    this.setState({ title: e.target.value });\n  };\n\n  onChangeContent = (e) => {\n    this.setState({ content: e.target.value });\n  };\n\n  onPublish = async () => {\n    const { title, content, file } = this.state;\n    if (!title || !content) {\n      toastTrigger(\"error\", \"Une erreur est survenue ‚õîÔ∏è\");\n      return;\n    }\n    const token = JSON.parse(JSON.stringify(sessionStorage.getItem(\"groupomania-token\")));\n\n    const obj = { title, content };\n    const json = JSON.stringify(obj);\n    const formData = new FormData();\n\n    formData.append(\"image\", file);\n    formData.append(\"message\", json);\n    if (this.props.isProfil) {\n      try {\n        if (file) {\n          await api({\n            url: \"/messagesImages/new/\",\n            method: \"post\",\n            data: formData,\n            headers: {\n              Authorization: `Bearer ${token}`,\n              Accept: \"application/json\",\n              \"Content-Type\": \"multipart/from-data\",\n            },\n          });\n          const response = await api({\n            url: \"/user/messages\",\n            method: \"get\",\n            headers: { Authorization: `Bearer ${token}` },\n          });\n          this.props.viewMessagesPost(response.data);\n          this.setState({ title: \"\", content: \"\", file: \"\", theInputKey: Math.random().toString(36) });\n          toastTrigger(\"success\", \"Publication ajout√© üëåüèº\");\n        } else {\n          await api({\n            url: \"/messages/new/\",\n            method: \"post\",\n            data: obj,\n            headers: { Authorization: `Bearer ${token}` },\n          });\n          const response = await api({\n            url: \"/user/messages\",\n            method: \"get\",\n            headers: { Authorization: `Bearer ${token}` },\n          });\n          this.props.viewMessagesPost(response.data);\n          this.setState({ title: \"\", content: \"\" });\n          toastTrigger(\"success\", \"Publication ajout√© üëåüèº\");\n        }\n      } catch (error) {\n        toastTrigger(\"error\", \"Une erreur est survenue ‚õîÔ∏è\");\n      }\n    } else {\n      try {\n        if (file) {\n          const response = await api({\n            url: \"/messagesImages/new/\",\n            method: \"post\",\n            data: formData,\n            headers: {\n              Authorization: `Bearer ${token}`,\n              Accept: \"application/json\",\n              \"Content-Type\": \"multipart/from-data\",\n            },\n          });\n          this.props.viewMessagesPost(response.data);\n          this.setState({ title: \"\", content: \"\", file: \"\", theInputKey: Math.random().toString(36) });\n          toastTrigger(\"success\", \"Publication ajout√© üëåüèº\");\n        } else {\n          const response = await api({\n            url: \"/messages/new/\",\n            method: \"post\",\n            data: obj,\n            headers: { Authorization: `Bearer ${token}` },\n          });\n          this.props.viewMessagesPost(response.data);\n          this.setState({ title: \"\", content: \"\" });\n          toastTrigger(\"success\", \"Publication ajout√© üëåüèº\");\n        }\n      } catch (error) {\n        toastTrigger(\"error\", \"Une erreur est survenue ‚õîÔ∏è\");\n      }\n    }\n  };\n\n  render() {\n    const { title, content } = this.state;\n    return (\n      <div className=\"post-message\">\n        <div className=\"post-message-title\">√âchanger avec vos collaborateurs</div>\n        <div className=\"input-container\">\n          <div className=\"input-title\">\n            <Input value={title} onChange={this.onChangeTitle} label=\"Titre\" type=\"text\" />\n          </div>\n          <div className=\"input-file\">\n            <ButtonFile onChange={this.onUploadFile} type=\"file\" theInputKey={this.state.theInputKey} />\n          </div>\n          <div className=\"input-content\">\n            <InputTextArea\n              id=\"outlined-multiline-static\"\n              label=\"Publication\"\n              rows={1}\n              variant=\"outlined\"\n              onChange={this.onChangeContent}\n              value={content}\n            />\n          </div>\n        </div>\n        {this.state.activePicture && this.state.file?.name !== undefined && (\n          <div className=\"picture-name\">{this.state.file?.name}</div>\n        )}\n        <div className=\"button-publish\">\n          <Button onClick={this.onPublish} title=\"Publier\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostMessage;\n"]},"metadata":{},"sourceType":"module"}